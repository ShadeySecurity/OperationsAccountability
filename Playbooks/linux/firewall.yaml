---
#-----
# Get IPTables Online
#-----
- name: Disable FirewallD
  systemd:
    name: FirewallD
    enabled: no
    state: stopped
    force: yes
  tags:
    - firewall
- name: Flush IPTables
  command: " {{ items }} "
  become: yes
  loop:
    - iptables -F
    - iptables -X
  tags:
    - firewall
#-----
# Basic function rules
#-----
- name: Block No-Target Networks
  iptables:
    chain: OUTPUT
    destination: "{{ notarget_networks }}"
    action: insert
    comment: "No Touch Block: Must be at the top of output"
    set_counters: APPEND
    jump: REJECT
  tags:
    - firewall
- name: Block No-Target Ranges
  command: IPTABLES -I OUTPUT -m iprange --dest-range "{{ notarget_ranges }}" -j REJECT
  tags:
    - firewall
- name: Log No-Target Networks
  iptables:
    chain: OUTPUT
    destination: "{{ notarget_networks }}"
    action: insert
    comment: "Log attempted touches of notarget"
    jump: LOG
  tags:
    - firewall
- name: Log No-Target Ranges
  command: iptables -I OUTPUT 2 --dest "{{ notarget_ranges }}" -j LOG
  tags:
    - firewall
- name: Allow teammates
  iptables:
    chain: INPUT
    source: "{{ team_networks }}"
    destination_port: "{{ linux_ports }}"
    comment: "Allow team"
  tags:
    - firewall
- name: Allow TCP reply
  iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
    comment: "Allow return TCP traffic"
  tags:
    - firewall
- name: Allow ICMP reply
  iptables:
    chain: INPUT
    protocol: icmp
    match: icmp
    jump: ACCEPT
    icmp_type: 8
    comment: "Allow ICMP reply"
  tags:
    - firewall
- name: Set DHCP allow or not
  iptables:
    chain: INPUT
    protocol: udp
    source_port: 67
    comment: "Allow DHCP response"
    jump: "{{ DHCP_action }}"
  tags:
    - firewall
- name: Allow local loop
  iptables:
    chain: INPUT
    destination: 127.0.0.0/8
    out_interface: lo
    comment: "Allow local loop otherwise certain things break"
  tags:
    - firewall
#-----
# (Re)Set Target
#-----
- name: Allow TCP to target networks
  iptables:
    chain: OUTPUT
    destination: "{{ target_networks }}"
    protocol: tcp
    destination_port: "{{ target_tcpports }}"
    jump: ACCEPT
    comment: "Targets"
  tags:
    - firewall
    - settarget
  when: target_tcp == "yes"
- name: Allow TCP to target ranges
  command: iptables -A OUTPUT -p tcp "-d {{ target_ranges }}" --dports "{{ target_tcpports }}" -j ACCEPT
  tags:
    - firewall
  when: target_tcp == "yes"
- name: Allow UDP to targets
  iptables:
    chain: OUTPUT
    destiantion: "{{ target_networks }}"
    destination_ports: "{{ target_udpports }}"
    protocol: udp
    jump: ACCEPT
    comment: "Targets"
  tags:
    - firewall
    - settarget
  when: target_udp == "yes"
- name: Allow UDP to target ranges
  command: iptables -A OUTPUT -p udp "-d {{ target_ranges }}" --dports "{{ target_udpports }}" -j ACCEPT
  tags:
    - firewall
  when: target_tcp == "yes"
- name: Allow UDP from targets in
  iptables:
    chain: INPUT
    destination: "{{ target_networks }}"
    protocol: UDP
    jump: ACCEPT
    comment: "Allow UDP return from targets"
  tags:
    - firewall
    - settarget
  when: target_udp == "yes"
- name: Allow ICMP to targets
  iptables:
    chain: OUTPUT
    destination: "{{ target_networks }}"
    protocol: ICMP
    jump: ACCEPT
    comment: "Targets"
  tags:
    - firewall
    - settarget
  when: target_icmp == "yes"
- name: Block communications from restricted users
  iptables:
    chain: OUTPUT
    uid_owner: "{{ restricted_users }}"
  tags:
    - firewall
- name: Validate Firewall
  command: sudo iptables -nvL
  register: iptablesfw
  tags:
    - firewall
    - cya
- debug: var=iptablesfw.stdout_lines
  tags:
    - firewall
    - cya
- pause:
    prompt: Once done reviewing please press enter if okay, otherwise cancel script.
  tags:
    - firewall
    - cya
